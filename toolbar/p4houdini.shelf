<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="p4houdini" label="P4Houdini">
    <memberTool name="p4houdini_install"/>
    <memberTool name="p4houdini_activate"/>
    <memberTool name="p4houdini_debug"/>
    <memberTool name="p4houdini_set_depot"/>
    <memberTool name="p4houdini_toggle_enabled"/>
    <memberTool name="p4houdini_checkout_hip_dependencies"/>
    <memberTool name="p4houdini_hip_checkout"/>
    <memberTool name="p4houdini_revert_hip"/>
    <memberTool name="p4houdini_submit"/>
  </toolshelf>

  <tool name="p4houdini_hip_checkout" label="Add/Checkout" icon="$P4HOUDINI/help/icons/add.svg">
    <script scriptType="python"><![CDATA[import P4Houdini

P4Houdini.hip_checkout_manual()]]></script>
  </tool>

  <tool name="p4houdini_submit" label="Submit" icon="$P4HOUDINI/help/icons/submit.svg">
    <script scriptType="python"><![CDATA[import P4Houdini

P4Houdini.submit_dialog()]]></script>
  </tool>

  <tool name="p4houdini_checkout_hip_dependencies" label="Checkout Dependencies" icon="$P4HOUDINI/help/icons/dependencies.svg">
    <script scriptType="python"><![CDATA[import P4Houdini

P4Houdini.hip_checkout_dependencies()]]></script>
  </tool>

  <tool name="p4houdini_install" label="Install P4" icon="$P4HOUDINI/help/icons/download.svg">
    <script scriptType="python"><![CDATA[import subprocess
import os

FOLDER = os.path.normpath(os.path.join(hou.text.expandString("$HOUDINI_TEMP_DIR"), "P4Houdini"))
PIP_FOLDER = os.path.normpath(os.path.join(hou.text.expandString("$HOUDINI_USER_PREF_DIR"), "scripts", "python"))
PIPINSTALLFILE = os.path.normpath(os.path.join(FOLDER, "get-pip.py"))

# Downloading pip installation file   
if not os.path.isdir(FOLDER):
    os.makedirs(FOLDER)
    
    
p = subprocess.Popen(["curl", "-o", PIPINSTALLFILE, "https://bootstrap.pypa.io/get-pip.py"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
out, err = p.communicate()
if err:
    raise hou.Error(out)

# Installing pip to Houdini
p = subprocess.Popen(["hython", PIPINSTALLFILE], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
out, err = p.communicate()
if err:
    raise hou.Error(out)


# Installing / Upgrading setuptools because on py3.9 the netifaces module needs to be rebuilt
p = subprocess.Popen(["hython", "-m", "pip", "install", "--upgrade", PIP_FOLDER, "setuptools"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
out, err = p.communicate()
if err:
    raise hou.Error(out)

# Installing p4python module using pip
p = subprocess.Popen(["hython", "-m", "pip", "install", "--target", PIP_FOLDER, "p4python"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
out, err = p.communicate()
if err:
    raise hou.Error(out)

# Informing user about the change
hou.ui.displayMessage("You have now installed the required dependencies for this build of Houdini.\nPlease restart Houdini for it to take effect", buttons=('OK',), severity=hou.severityType.Message, title="P4Houdini Plugin")
]]></script>
  </tool>

  <tool name="p4houdini_set_depot" label="Set Depot" icon="$P4HOUDINI/help/icons/set_depot.svg">
    <script scriptType="python"><![CDATA[import hou
import json

path = hou.ui.selectFile(title="P4Houdini - Select Depot Root", file_type=hou.fileType.Directory, chooser_mode=hou.fileChooserMode.Read)

if path != "":
    preferences_file = hou.text.expandString("$P4HOUDINI/P4Preferences.json")

    with open(preferences_file, encoding="utf-8") as file:
        preferences = json.load(file)
    
    
    preferences["P4Client_Root"] = hou.text.expandString(path)
    
    with open(preferences_file, 'w') as file:
        json.dump(preferences, file, indent=4)]]></script>
  </tool>

  <tool name="p4houdini_debug" label="Debug Config" icon="$P4HOUDINI/help/icons/help.svg">
    <script scriptType="python"><![CDATA[import P4Houdini
import os

plugin = P4Houdini.P4HoudiniPlugin()

print("P4INFO --- ", plugin.perforce.run("info"), "\n")
print("P4CONFIG --- ", os.environ["P4CONFIG"], "\n")
print("P4PREFERENCES --- ", plugin.preferences , "\n")

plugin.disconnect_perforce()]]></script>
  </tool>

  <tool name="p4houdini_revert_hip" label="Revert" icon="$P4HOUDINI/help/icons/revert.svg">
    <script scriptType="python"><![CDATA[import P4Houdini

P4Houdini.hip_revert()]]></script>
  </tool>

  <tool name="p4houdini_activate" label="Activate License" icon="$P4HOUDINI/help/icons/activate.svg">
    <script scriptType="python"><![CDATA[import P4Houdini
import P4Validator
import os

plugin = P4Houdini.P4HoudiniPlugin(activation=True)

_message = "Please enter your P4Houdini license key. Please note you can only activate a license ONCE, and it will be locked to this machine!"

ok, license = hou.ui.readInput(_message, buttons=("Activate", "Cancel"), severity=hou.severityType.Message, default_choice=1, close_choice=1, title="P4Houdini Activation")

if ok == 0:
    status, message = P4Validator.try_activate_license(plugin, license)
    hou.ui.displayConfirmation(message, severity=hou.severityType.Message, title="P4Houdini", suppress=hou.confirmType.OverwriteFile)]]></script>
  </tool>

  <tool name="p4houdini_toggle_enabled" label="Enable Disable" icon="$P4HOUDINI/help/icons/toggle_enabled.svg">
    <script scriptType="python"><![CDATA[import P4Houdini

P4Houdini.toggle_plugin_active()]]></script>
  </tool>
</shelfDocument>
